(()=>{"use strict";var e={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible"},t=document.querySelector(".elements"),n=document.querySelector(".popup_user"),r=document.querySelector(".popup_place"),o=document.querySelector(".popup_image"),i=document.querySelector(".popup_avatar"),u=document.querySelector(".popup_trash"),c=(document.querySelector(".popup__place-img"),document.querySelector(".popup__title-img"),document.querySelector(".profile__edit-button")),a=document.querySelector(".profile__add-button"),s=document.querySelector(".profile__overlay"),l=document.querySelector(".profile__avatar"),f=document.querySelector(".popup__form-user"),p=document.querySelector(".popup__input_user_name"),y=document.querySelector(".popup__input_user_about"),h=document.querySelector(".popup__input_type_avatar"),m=document.querySelector(".profile__name"),d=document.querySelector(".profile__about"),v=document.querySelector(".popup__form-place"),b=(document.querySelector(".popup__input_place_title"),document.querySelector(".popup__input_place_link"),document.querySelector(".popup__form-avatar"));function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==_(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==_(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===_(o)?o:String(o)),r)}var o}var g=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.headers=t.headers,this.baseURL=t.baseURL}var t,n;return t=e,(n=[{key:"createItem",value:function(e){var t=this;return fetch("".concat(this.baseURL,"/cards"),{headers:this.headers,method:"POST",body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return t._checkServerResponse(e)}))}},{key:"deleteItem",value:function(e){var t=this;return fetch("".concat(this.baseURL,"/cards/").concat(e),{headers:this.headers,method:"DELETE"}).then((function(e){return t._checkServerResponse(e)}))}},{key:"getCardList",value:function(){var e=this;return fetch("".concat(this.baseURL,"/cards"),{headers:this.headers,method:"GET"}).then((function(t){return e._checkServerResponse(t)}))}},{key:"_checkServerResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка в запросе: ".concat(e.status))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this.baseURL,"/users/me"),{headers:this.headers,method:"GET"}).then((function(t){return e._checkServerResponse(t)}))}},{key:"setUserInfo",value:function(e){var t=this;return fetch("".concat(this.baseURL,"/users/me"),{headers:this.headers,method:"PATCH",body:JSON.stringify({name:e.name,about:e.about})}).then((function(e){return t._checkServerResponse(e)}))}},{key:"setUserAvatar",value:function(e){var t=this;return fetch("".concat(this.baseURL,"/users/me/avatar"),{headers:this.headers,method:"PATCH",body:JSON.stringify({avatar:e.avatar})}).then((function(e){return t._checkServerResponse(e)}))}},{key:"putLike",value:function(e){var t=this;return fetch("".concat(this.baseURL,"/cards/").concat(e,"/likes"),{headers:this.headers,method:"PUT"}).then((function(e){return t._checkServerResponse(e)}))}},{key:"deleteLike",value:function(e){var t=this;return fetch("".concat(this.baseURL,"/cards/").concat(e,"/likes"),{headers:this.headers,method:"DELETE"}).then((function(e){return t._checkServerResponse(e)}))}}])&&S(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==k(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===k(o)?o:String(o)),r)}var o}var E=function(){function e(t,n,r,o,i,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._templateSelector=n,this._handleCardClick=r,this._handleCardDelete=o,this._handleCardLike=i,this._userId=u,this._cardId=t._id,this._ownerId=t.owner._id,this._isLike=!1,this._likes=t.likes}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this;this._trashButton.addEventListener("click",(function(){e._handleCardDelete(e,e._cardId)})),this._likeButton.addEventListener("click",(function(){e._handleCardLike(e,e._cardId)})),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._link,e._name)}))}},{key:"_clickLikeButton",value:function(){this._likeButton.classList.toggle("element__like-button_active")}},{key:"isLike",get:function(){return this._isLike}},{key:"getLikes",value:function(e){this._likes=e,this._likesBox.textContent=this._likes.length}},{key:"toggleLike",value:function(){this._likeButton.classList.toggle("element__like-button_active")}},{key:"toggleIsLike",value:function(){this._isLike=!this._isLike}},{key:"deleteCard",value:function(){this._element.remove(),this._element=null}},{key:"generateCard",value:function(){var e=this;return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".element__image"),this._cardName=this._element.querySelector(".element__subtitle"),this._likeButton=this._element.querySelector(".element__like-button"),this._trashButton=this._element.querySelector(".element__trash-button"),this._likesBox=this._element.querySelector(".element__like-box"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardName.textContent=this._name,this._likesBox.textContent=this._likes.length,this._userId!==this._ownerId&&this._trashButton.remove(),this._likes.some((function(t){return t._id===e._userId}))&&(this._likeButton.classList.add("element__like-button_active"),this._isLike=!0),this._setEventListeners(),this._element}}])&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==L(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==L(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===L(o)?o:String(o)),r)}var o}var O=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._formElement=n,this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));t.classList.add(this._errorClass),t.textContent=e.validationMessage,e.classList.add(this._inputErrorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.remove(this._submitButtonSelector),this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.add(this._submitButtonSelector),this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"resetForm",value:function(){this._toggleButtonState()}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&j(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==P(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==P(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===P(o)?o:String(o)),r)}var o}var I=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=n}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.reverse().forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==R(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==R(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===R(o)?o:String(o)),r)}var o}var B=function(){function e(t){var n=t.name,r=t.about,o=t.avatar,i=t._id;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=n,this._userJob=r,this._avatar=o,this._id=i}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,about:this._userJob.textContent,avatar:this._avatar.src}}},{key:"setUserAvatar",value:function(e){this._avatar.src=e.avatar}},{key:"setUserInfo",value:function(e){this._userName.textContent=e.name,this._userJob.textContent=e.about}},{key:"getUserId",value:function(){return this._id}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function q(e){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},q(e)}function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,U(r.key),r)}}function U(e){var t=function(e,t){if("object"!==q(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==q(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===q(t)?t:String(t)}var D=function(){function e(t){var n,r,o,i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),n=this,o=function(e){"Escape"===e.key&&i.close()},(r=U(r="_handleEscClose"))in n?Object.defineProperty(n,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[r]=o,this._popup=t,this._closeButton=t.querySelector(".popup__close-button")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._closeButton.addEventListener("click",(function(){return e.close()})),this._popup.addEventListener("mousedown",(function(t){t.target.classList.contains("popup_opened")&&e.close()}))}}])&&x(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function F(e){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},F(e)}function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==F(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==F(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===F(o)?o:String(o)),r)}var o}function A(){return A="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=N(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},A.apply(this,arguments)}function N(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=G(e)););return e}function J(e,t){return J=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},J(e,t)}function z(e,t){if(t&&("object"===F(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function G(e){return G=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},G(e)}var H=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&J(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=G(r);if(o){var n=G(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return z(this,e)});function u(e,t){var n,r=t.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._handleFormSubmit=r,n._popupForm=e.querySelector(".popup__form"),n._inputList=e.querySelectorAll(".popup__input"),n._button=e.querySelector(".popup__submit-button"),n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputValues={},this._inputList.forEach((function(t){e._inputValues[t.name]=t.value})),this._inputValues}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"setButtonText",value:function(e){this._button.textContent=e}},{key:"close",value:function(){A(G(u.prototype),"close",this).call(this),this._popupForm.reset()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())})),A(G(u.prototype),"setEventListeners",this).call(this)}}])&&V(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(D);function M(e){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},M(e)}function K(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==M(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==M(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===M(o)?o:String(o)),r)}var o}function Q(){return Q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=W(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},Q.apply(this,arguments)}function W(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=Z(e)););return e}function X(e,t){return X=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},X(e,t)}function Y(e,t){if(t&&("object"===M(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function Z(e){return Z=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Z(e)}var $=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&X(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Z(r);if(o){var n=Z(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Y(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._link=e.querySelector(".popup__place-img"),t._name=e.querySelector(".popup__title-img"),t}return t=u,(n=[{key:"open",value:function(e,t){this._link.src=e,this._link.alt=t,this._name.textContent=t,Q(Z(u.prototype),"open",this).call(this)}}])&&K(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(D);function ee(e){return ee="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ee(e)}function te(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==ee(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==ee(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===ee(o)?o:String(o)),r)}var o}function ne(){return ne="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=re(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},ne.apply(this,arguments)}function re(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=ce(e)););return e}function oe(e,t){return oe=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},oe(e,t)}function ie(e,t){if(t&&("object"===ee(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return ue(e)}function ue(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function ce(e){return ce=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ce(e)}var ae,se=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&oe(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=ce(r);if(o){var n=ce(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return ie(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._handleFormDeleteSubmit=t.bind(ue(n)),n._form=e.querySelector(".popup__form"),n._button=e.querySelector(".popup__submit-button"),n}return t=u,(n=[{key:"setButtonText",value:function(e){this._button.textContent=e}},{key:"open",value:function(e,t){ne(ce(u.prototype),"open",this).call(this),this._card=e,this._cardID=t}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormDeleteSubmit(e._card),ne(ce(u.prototype),"close",e).call(e)})),ne(ce(u.prototype),"setEventListeners",this).call(this)}}])&&te(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(D),le=new B({name:m,about:d,avatar:l}),fe=new I({cards:[{name:"Архыз",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg"},{name:"Челябинская область",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg"},{name:"Иваново",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg"},{name:"Камчатка",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg"},{name:"Холмогорский район",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg"},{name:"Байкал",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg"}],renderer:function(e){fe.addItem(he(e))}},t),pe=new $(o);function ye(e,t){pe.open(e,t)}function he(e){return new E(e,"#element-template",ye,be,_e,ae).generateCard()}pe.setEventListeners();var me=new g({baseURL:"https://mesto.nomoreparties.co/v1/cohort-60",headers:{authorization:"b6838bf7-14fe-40ed-b0dc-af6a89120ae2","Content-Type":"application/json"}});Promise.all([me.getUserInfo(),me.getCardList()]).then((function(e){var t=e[0],n=e[1];le.setUserInfo(t),le.setUserAvatar(t),le.getUserId(t._id),ae=t._id,fe.renderItems(n)})).catch((function(e){console.log(e)})),me.getCardList().then((function(e){fe.renderItems(e)})).catch((function(e){console.log(e)})),me.getUserInfo().then((function(e){le.getUserInfo(e),p.value=e.name,y.value=e.about})).catch((function(e){console.log(e)}));var de=new H(r,{handleFormSubmit:function(e,t){de.setButtonText("Сохранение..."),me.createItem(e,t).then((function(e){var t=he(e);fe.addItem(t),de.close()})).catch((function(e){console.log(e)})).finally((function(){de.setButtonText("Создать")}))}});de.setEventListeners();var ve=new se(u,(function(e){ve.setButtonText("Удаление..."),me.deleteItem(e._cardId).then((function(){e.deleteCard(),ve.close()})).catch((function(e){console.log(e)})).finally((function(){ve.setButtonText("Да")}))}));function be(e,t){ve.open(e,t)}function _e(e){e.isLike?me.deleteLike(e._cardId).then((function(t){e.getLikes(t.likes),e.toggleIsLike(),e.toggleLike()})).catch((function(e){console.log(e)})):me.putLike(e._cardId).then((function(t){e.getLikes(t.likes),e.toggleIsLike(),e.toggleLike()})).catch((function(e){console.log(e)}))}ve.setEventListeners();var Se=new H(n,{handleFormSubmit:function(e){Se.setButtonText("Сохранение..."),me.setUserInfo(e).then((function(e){le.setUserInfo(e,{name:p,about:y}),Se.close()})).catch((function(e){console.log(e)})).finally((function(){Se.setButtonText("Сохранить")}))}});Se.setEventListeners();var ge=new H(i,{handleFormSubmit:function(e){ge.setButtonText("Сохранение..."),me.setUserAvatar(e).then((function(e){le.setUserAvatar(e,{avatar:h}),ge.close()})).catch((function(e){console.log(e)})).finally((function(){ge.setButtonText("Сохранить")}))}});ge.setEventListeners(),new O(e,f).enableValidation();var ke=new O(e,v);ke.enableValidation();var we=new O(e,b);we.enableValidation(),c.addEventListener("click",(function(){Se.setInputValues(le.getUserInfo()),Se.open()})),a.addEventListener("click",(function(){de.open(),ke.resetForm()})),s.addEventListener("click",(function(){ge.open(),we.resetForm()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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YyxHQUFvQi9CLG9CQUdNLElBQUloRixFQUFjNUYsRUFBa0JtQixHQUM1Q3lMLG1CQUVsQixJQUFNQyxHQUFxQixJQUFJakgsRUFBYzVGLEVBQWtCeUIsR0FDL0RvTCxHQUFtQkQsbUJBRW5CLElBQU1FLEdBQXNCLElBQUlsSCxFQUFjNUYsRUFBa0IwQixHQUNoRW9MLEdBQW9CRixtQkFHcEI3TCxFQUFjNEQsaUJBQWlCLFNBQVMsV0FDdEMrSCxHQUFjSyxlQUFlM0MsR0FBU1ksZUFDdEMwQixHQUFjaEMsTUFDaEIsSUFFQTFKLEVBQWUyRCxpQkFBaUIsU0FBUyxXQUN2Q2lILEdBQWtCbEIsT0FDbEJtQyxHQUFtQkcsV0FDckIsSUFFQS9MLEVBQWdCMEQsaUJBQWlCLFNBQVMsV0FDeENnSSxHQUFvQmpDLE9BQ3BCb0MsR0FBb0JFLFdBQ3RCLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBEZWxldGVGb3JtLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3BhZ2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6ICfQkNGA0YXRi9C3JyxcclxuICAgICAgbGluazogJ2h0dHBzOi8vcGljdHVyZXMuczMueWFuZGV4Lm5ldC9mcm9udGVuZC1kZXZlbG9wZXIvY2FyZHMtY29tcHJlc3NlZC9hcmtoeXouanBnJ1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogJ9Cn0LXQu9GP0LHQuNC90YHQutCw0Y8g0L7QsdC70LDRgdGC0YwnLFxyXG4gICAgICBsaW5rOiAnaHR0cHM6Ly9waWN0dXJlcy5zMy55YW5kZXgubmV0L2Zyb250ZW5kLWRldmVsb3Blci9jYXJkcy1jb21wcmVzc2VkL2NoZWx5YWJpbnNrLW9ibGFzdC5qcGcnXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiAn0JjQstCw0L3QvtCy0L4nLFxyXG4gICAgICBsaW5rOiAnaHR0cHM6Ly9waWN0dXJlcy5zMy55YW5kZXgubmV0L2Zyb250ZW5kLWRldmVsb3Blci9jYXJkcy1jb21wcmVzc2VkL2l2YW5vdm8uanBnJ1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogJ9Ca0LDQvNGH0LDRgtC60LAnLFxyXG4gICAgICBsaW5rOiAnaHR0cHM6Ly9waWN0dXJlcy5zMy55YW5kZXgubmV0L2Zyb250ZW5kLWRldmVsb3Blci9jYXJkcy1jb21wcmVzc2VkL2thbWNoYXRrYS5qcGcnXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiAn0KXQvtC70LzQvtCz0L7RgNGB0LrQuNC5INGA0LDQudC+0L0nLFxyXG4gICAgICBsaW5rOiAnaHR0cHM6Ly9waWN0dXJlcy5zMy55YW5kZXgubmV0L2Zyb250ZW5kLWRldmVsb3Blci9jYXJkcy1jb21wcmVzc2VkL2tob2xtb2dvcnNreS1yYXlvbi5qcGcnXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiAn0JHQsNC50LrQsNC7JyxcclxuICAgICAgbGluazogJ2h0dHBzOi8vcGljdHVyZXMuczMueWFuZGV4Lm5ldC9mcm9udGVuZC1kZXZlbG9wZXIvY2FyZHMtY29tcHJlc3NlZC9iYWlrYWwuanBnJ1xyXG4gICAgfVxyXG4gIF07XHJcblxyXG5leHBvcnQgY29uc3QgdmFsaWRhdGlvbkNvbmZpZyA9IHtcclxuICAgIGZvcm1TZWxlY3RvcjogJy5wb3B1cF9fZm9ybScsXHJcbiAgICBpbnB1dFNlbGVjdG9yOiAnLnBvcHVwX19pbnB1dCcsXHJcbiAgICBzdWJtaXRCdXR0b25TZWxlY3RvcjogJy5wb3B1cF9fc3VibWl0LWJ1dHRvbicsXHJcbiAgICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiAncG9wdXBfX3N1Ym1pdC1idXR0b25fZGlzYWJsZWQnLFxyXG4gICAgaW5wdXRFcnJvckNsYXNzOiAncG9wdXBfX2lucHV0X3R5cGVfZXJyb3InLFxyXG4gICAgZXJyb3JDbGFzczogJ3BvcHVwX19pbnB1dC1lcnJvcl92aXNpYmxlJ1xyXG59O1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBjYXJkc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50cycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IHBvcHVwVXNlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF91c2VyJyk7XHJcbmV4cG9ydCBjb25zdCBwb3B1cFBsYWNlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX3BsYWNlJyk7XHJcbmV4cG9ydCBjb25zdCBwb3B1cEltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX2ltYWdlJyk7XHJcbmV4cG9ydCBjb25zdCBwb3B1cEF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9hdmF0YXInKTtcclxuZXhwb3J0IGNvbnN0IHBvcHVwRGVsZXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX3RyYXNoJyk7XHJcblxyXG5leHBvcnQgY29uc3QgcG9wdXBJbWFnZUxpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3BsYWNlLWltZycpO1xyXG5leHBvcnQgY29uc3QgcG9wdXBJbWFnZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3RpdGxlLWltZycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IHBvcHVwT3BlblVzZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fZWRpdC1idXR0b24nKTtcclxuZXhwb3J0IGNvbnN0IHBvcHVwT3BlblBsYWNlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2FkZC1idXR0b24nKTtcclxuZXhwb3J0IGNvbnN0IHBvcHVwT3BlbkF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19vdmVybGF5Jyk7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2F2YXRhcicpO1xyXG5cclxuZXhwb3J0IGNvbnN0IHBvcHVwRm9ybVVzZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0tdXNlcicpO1xyXG5leHBvcnQgY29uc3QgbmFtZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbnB1dF91c2VyX25hbWUnKTtcclxuZXhwb3J0IGNvbnN0IGpvYklucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbnB1dF91c2VyX2Fib3V0Jyk7XHJcbmV4cG9ydCBjb25zdCBhdmF0YXJJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfdHlwZV9hdmF0YXInKTtcclxuZXhwb3J0IGNvbnN0IG5hbWVQcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX25hbWUnKTtcclxuZXhwb3J0IGNvbnN0IGpvYlByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWJvdXQnKTtcclxuXHJcbmV4cG9ydCBjb25zdCBwb3B1cEZvcm1QbGFjZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybS1wbGFjZScpO1xyXG5leHBvcnQgY29uc3QgdGl0bGVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfcGxhY2VfdGl0bGUnKTtcclxuZXhwb3J0IGNvbnN0IGxpbmtJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfcGxhY2VfbGluaycpO1xyXG5leHBvcnQgY29uc3QgcG9wdXBGb3JtQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtLWF2YXRhcicpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGFwaUNvbmZpZyA9IHtcclxuICBiYXNlVVJMOiAnaHR0cHM6Ly9tZXN0by5ub21vcmVwYXJ0aWVzLmNvL3YxL2NvaG9ydC02MCcsXHJcbiAgaGVhZGVyczoge1xyXG4gICAgIGF1dGhvcml6YXRpb246ICdiNjgzOGJmNy0xNGZlLTQwZWQtYjBkYy1hZjZhODkxMjBhZTInLFxyXG4gICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcclxuICB9XHJcbn07IiwiZXhwb3J0IGNsYXNzIEFwaSB7XHJcblxyXG4gICAgY29uc3RydWN0b3IoY29uZmlnKSB7XHJcbiAgICAgICAgdGhpcy5oZWFkZXJzID0gY29uZmlnLmhlYWRlcnM7XHJcbiAgICAgICAgdGhpcy5iYXNlVVJMID0gY29uZmlnLmJhc2VVUkw7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGNyZWF0ZUl0ZW0gKGl0ZW0pIHtcclxuICAgICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVSTH0vY2FyZHNgLCB7XHJcbiAgICAgICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxyXG4gICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGl0ZW0ubmFtZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgIGxpbms6IGl0ZW0ubGluayxcclxuICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICB9KVxyXG4gICAgICAgIC50aGVuKHJlcyA9PiB0aGlzLl9jaGVja1NlcnZlclJlc3BvbnNlKHJlcykpO1xyXG4gICAgIH1cclxuICAgIFxyXG4gICAgZGVsZXRlSXRlbShpZCkge1xyXG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVUkx9L2NhcmRzLyR7aWR9YCwge1xyXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXHJcbiAgICAgICAgICAgIG1ldGhvZDogJ0RFTEVURScsXHJcbiAgICAgICAgfSlcclxuICAgICAgICAudGhlbihyZXMgPT4gdGhpcy5fY2hlY2tTZXJ2ZXJSZXNwb25zZShyZXMpKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRDYXJkTGlzdCgpIHtcclxuICAgICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVVJMfS9jYXJkc2AsIHtcclxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcclxuICAgICAgICAgICAgICAgIG1ldGhvZDogJ0dFVCcsXHJcbiAgICAgICAgfSlcclxuICAgICAgICAudGhlbihyZXMgPT4gdGhpcy5fY2hlY2tTZXJ2ZXJSZXNwb25zZShyZXMpKTtcclxuICAgIH1cclxuXHJcbiAgICAgX2NoZWNrU2VydmVyUmVzcG9uc2UocmVzKSB7XHJcbiAgICAgICAgaWYgKHJlcy5vaykge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LAg0LIg0LfQsNC/0YDQvtGB0LU6ICR7cmVzLnN0YXR1c31gKVxyXG4gICAgfVxyXG5cclxuICAgIGdldFVzZXJJbmZvKCkge1xyXG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVUkx9L3VzZXJzL21lYCwge1xyXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXHJcbiAgICAgICAgICAgIG1ldGhvZDogJ0dFVCcsXHJcbiAgICAgICAgfSlcclxuICAgICAgICAudGhlbihyZXMgPT4gdGhpcy5fY2hlY2tTZXJ2ZXJSZXNwb25zZShyZXMpKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRVc2VySW5mbyhkYXRhKSB7XHJcbiAgICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVSTH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcclxuICAgICAgICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxyXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBkYXRhLm5hbWUsIFxyXG4gICAgICAgICAgICAgICAgYWJvdXQ6IGRhdGEuYWJvdXRcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KVxyXG4gICAgICAgIC50aGVuKHJlcyA9PiB0aGlzLl9jaGVja1NlcnZlclJlc3BvbnNlKHJlcykpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFVzZXJBdmF0YXIoZGF0YSkge1xyXG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVUkx9L3VzZXJzL21lL2F2YXRhcmAsIHtcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxyXG4gICAgICAgICAgICBtZXRob2Q6ICdQQVRDSCcsXHJcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgICAgICAgIGF2YXRhcjogZGF0YS5hdmF0YXIsIFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4ocmVzID0+IHRoaXMuX2NoZWNrU2VydmVyUmVzcG9uc2UocmVzKSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHV0TGlrZShpZCkge1xyXG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVUkx9L2NhcmRzLyR7aWR9L2xpa2VzYCwge1xyXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXHJcbiAgICAgICAgICAgIG1ldGhvZDogJ1BVVCcsXHJcbiAgICAgICAgfSlcclxuICAgICAgICAudGhlbihyZXMgPT4gdGhpcy5fY2hlY2tTZXJ2ZXJSZXNwb25zZShyZXMpKTtcclxuICAgIH1cclxuXHJcbiAgICBkZWxldGVMaWtlKGlkKSB7XHJcbiAgICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVSTH0vY2FyZHMvJHtpZH0vbGlrZXNgLCB7XHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcclxuICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJyxcclxuICAgICAgICB9KVxyXG4gICAgICAgIC50aGVuKHJlcyA9PiB0aGlzLl9jaGVja1NlcnZlclJlc3BvbnNlKHJlcykpO1xyXG4gICAgfVxyXG5cclxufSIsImV4cG9ydCBjbGFzcyBDYXJkIHtcclxuICAgIGNvbnN0cnVjdG9yKGRhdGEsIHRlbXBsYXRlU2VsZWN0b3IsIGhhbmRsZUNhcmRDbGljaywgaGFuZGxlQ2FyZERlbGV0ZSwgaGFuZGxlQ2FyZExpa2UsIHVzZXJJZCkge1xyXG4gICAgICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XHJcbiAgICAgICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcclxuICAgICAgICB0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yID0gdGVtcGxhdGVTZWxlY3RvcjtcclxuICAgICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlQ2FyZERlbGV0ZSA9IGhhbmRsZUNhcmREZWxldGU7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlQ2FyZExpa2UgPSBoYW5kbGVDYXJkTGlrZTtcclxuICAgICAgICB0aGlzLl91c2VySWQgPSB1c2VySWQ7XHJcbiAgICAgICAgdGhpcy5fY2FyZElkID0gZGF0YS5faWQ7XHJcbiAgICAgICAgdGhpcy5fb3duZXJJZCA9IGRhdGEub3duZXIuX2lkO1xyXG4gICAgICAgIHRoaXMuX2lzTGlrZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuX2xpa2VzID0gZGF0YS5saWtlcztcclxuICAgIH1cclxuXHJcbiAgICBfZ2V0VGVtcGxhdGUoKSB7XHJcbiAgICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IpLmNvbnRlbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnQnKS5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgICAgICAgcmV0dXJuIGNhcmRFbGVtZW50O1xyXG4gICAgfVxyXG5cclxuICAgIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICB0aGlzLl90cmFzaEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5faGFuZGxlQ2FyZERlbGV0ZSh0aGlzLCB0aGlzLl9jYXJkSWQpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9oYW5kbGVDYXJkTGlrZSh0aGlzLCB0aGlzLl9jYXJkSWQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgIFxyXG4gICAgICAgIHRoaXMuX2NhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKHRoaXMuX2xpbmssIHRoaXMuX25hbWUpXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgX2NsaWNrTGlrZUJ1dHRvbigpIHtcclxuICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoJ2VsZW1lbnRfX2xpa2UtYnV0dG9uX2FjdGl2ZScpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBpc0xpa2UoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lzTGlrZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRMaWtlcyhsaWtlcykge1xyXG4gICAgICAgIHRoaXMuX2xpa2VzID0gbGlrZXM7XHJcbiAgICAgICAgdGhpcy5fbGlrZXNCb3gudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlcy5sZW5ndGg7XHJcbiAgICB9XHJcblxyXG4gICAgdG9nZ2xlTGlrZSgpIHtcclxuICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoJ2VsZW1lbnRfX2xpa2UtYnV0dG9uX2FjdGl2ZScpO1xyXG4gICAgfVxyXG5cclxuICAgIHRvZ2dsZUlzTGlrZSgpe1xyXG4gICAgICAgIHRoaXMuX2lzTGlrZSA9ICF0aGlzLl9pc0xpa2U7XHJcbiAgICB9XHJcblxyXG4gICAgZGVsZXRlQ2FyZCgpIHtcclxuICAgICAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIGdlbmVyYXRlQ2FyZCgpIHtcclxuICAgICAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcclxuICAgICAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19pbWFnZScpO1xyXG4gICAgICAgIHRoaXMuX2NhcmROYW1lID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fc3VidGl0bGUnKTtcclxuICAgICAgICB0aGlzLl9saWtlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZS1idXR0b24nKTtcclxuICAgICAgICB0aGlzLl90cmFzaEJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX3RyYXNoLWJ1dHRvbicpO1xyXG4gICAgICAgIHRoaXMuX2xpa2VzQm94ID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZS1ib3gnKTtcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLl9jYXJkSW1hZ2Uuc3JjID0gdGhpcy5fbGluaztcclxuICAgICAgICB0aGlzLl9jYXJkSW1hZ2UuYWx0ID0gdGhpcy5fbmFtZTtcclxuICAgICAgICB0aGlzLl9jYXJkTmFtZS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XHJcbiAgICAgICAgdGhpcy5fbGlrZXNCb3gudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlcy5sZW5ndGg7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLl91c2VySWQgIT09IHRoaXMuX293bmVySWQpIHtcclxuICAgICAgICAgICAgdGhpcy5fdHJhc2hCdXR0b24ucmVtb3ZlKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodGhpcy5fbGlrZXMuc29tZShpdGVtID0+IGl0ZW0uX2lkID09PSB0aGlzLl91c2VySWQpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmFkZCgnZWxlbWVudF9fbGlrZS1idXR0b25fYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIHRoaXMuX2lzTGlrZSA9IHRydWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgICAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcclxuICAgIH1cclxufTtcclxuXHJcbiIsImV4cG9ydCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICAgIGNvbnN0cnVjdG9yKGNvbmZpZywgZm9ybUVsZW1lbnQpIHtcclxuICAgICAgICB0aGlzLl9jb25maWcgPSBjb25maWc7XHJcbiAgICAgICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtRWxlbWVudDtcclxuXHJcbiAgICAgICAgdGhpcy5fZm9ybVNlbGVjdG9yID0gY29uZmlnLmZvcm1TZWxlY3RvcjtcclxuICAgICAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gY29uZmlnLmlucHV0U2VsZWN0b3I7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBjb25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgICAgICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IGNvbmZpZy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xyXG4gICAgICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IGNvbmZpZy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICAgICAgdGhpcy5fZXJyb3JDbGFzcyA9IGNvbmZpZy5lcnJvckNsYXNzO1xyXG5cclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcikpO1xyXG4gICAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICAgIH1cclxuXHJcbiAgICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICAgICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gICAgICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZTtcclxuICAgICAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgfTtcclxuXHJcbiAgICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICAgICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICAgICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gJyc7IFxyXG4gICAgICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gICAgfTtcclxuXHJcbiAgICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xyXG4gICAgICAgIGlmIChpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICB9O1xyXG4gICAgfTtcclxuXHJcbiAgICBfaGFzSW52YWxpZElucHV0KCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9pbnB1dExpc3Quc29tZSgoaW5wdXRFbGVtZW50KSA9PiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKTtcclxuICAgIH07XHJcblxyXG4gICAgX3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xyXG4gICAgICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xyXG4gICAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICAgICAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gICAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgIH07XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICAgICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHJlc2V0Rm9ybSgpIHtcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfTtcclxufTsiLCJleHBvcnQgY2xhc3MgU2VjdGlvbiB7XHJcblxyXG4gICAgY29uc3RydWN0b3Ioe3JlbmRlcmVyfSwgc2VsZWN0b3IpIHtcclxuICAgICAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgICAgIHRoaXMuX2NvbnRhaW5lciA9IHNlbGVjdG9yO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlckl0ZW1zKGl0ZW1zKSB7XHJcbiAgICAgICAgaXRlbXMucmV2ZXJzZSgpLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkSXRlbShjYXJkKSB7XHJcbiAgICAgICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoY2FyZCk7XHJcbiAgICB9IFxyXG59XHJcbiIsImV4cG9ydCBjbGFzcyBVc2VySW5mbyB7XHJcblxyXG4gICAgY29uc3RydWN0b3Ioe25hbWUsIGFib3V0LCBhdmF0YXIsIF9pZH0pIHtcclxuICAgICAgICB0aGlzLl91c2VyTmFtZSA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5fdXNlckpvYiA9IGFib3V0O1xyXG4gICAgICAgIHRoaXMuX2F2YXRhciA9IGF2YXRhcjtcclxuICAgICAgICB0aGlzLl9pZCA9IF9pZDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICAgICAgY29uc3QgdXNlckRhdGEgPSB7XHJcbiAgICAgICAgICAgIG5hbWU6IHRoaXMuX3VzZXJOYW1lLnRleHRDb250ZW50LFxyXG4gICAgICAgICAgICBhYm91dDogdGhpcy5fdXNlckpvYi50ZXh0Q29udGVudCxcclxuICAgICAgICAgICAgYXZhdGFyOiB0aGlzLl9hdmF0YXIuc3JjXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB1c2VyRGF0YTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRVc2VyQXZhdGFyKGRhdGEpIHtcclxuICAgICAgICB0aGlzLl9hdmF0YXIuc3JjID0gZGF0YS5hdmF0YXI7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0VXNlckluZm8oZGF0YSkge1xyXG4gICAgICAgIHRoaXMuX3VzZXJOYW1lLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xyXG4gICAgICAgIHRoaXMuX3VzZXJKb2IudGV4dENvbnRlbnQgPSBkYXRhLmFib3V0O1xyXG4gICAgfVxyXG5cclxuICAgIGdldFVzZXJJZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5faWQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbiIsImV4cG9ydCBjbGFzcyBQb3B1cCB7XHJcblxyXG4gICAgY29uc3RydWN0b3IocG9wdXApIHtcclxuICAgICAgICB0aGlzLl9wb3B1cCA9IHBvcHVwO1xyXG4gICAgICAgIHRoaXMuX2Nsb3NlQnV0dG9uID0gcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19jbG9zZS1idXR0b24nKTtcclxuICAgIH1cclxuXHJcbiAgICBvcGVuKCkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoJ3BvcHVwX29wZW5lZCcpOyBcclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBjbG9zZSgpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKCdwb3B1cF9vcGVuZWQnKTtcclxuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIF9oYW5kbGVFc2NDbG9zZSA9IChldnQpID0+IHtcclxuICAgICAgICBpZiAoZXZ0LmtleSA9PT0gJ0VzY2FwZScpIHtcclxuICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICB0aGlzLl9jbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuY2xvc2UoKSk7XHJcbiAgICAgICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgKGV2dCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3BvcHVwX29wZW5lZCcpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfSAgXHJcbn1cclxuIiwiaW1wb3J0IHsgUG9wdXAgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cC5qc1wiO1xyXG5cclxuXHJcbmV4cG9ydCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yIChwb3B1cCwge2hhbmRsZUZvcm1TdWJtaXR9ICkge1xyXG4gICAgICAgIHN1cGVyKHBvcHVwKTtcclxuICAgICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcclxuICAgICAgICB0aGlzLl9wb3B1cEZvcm0gPSAgcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtJyk7XHJcbiAgICAgICAgdGhpcy5faW5wdXRMaXN0ID0gcG9wdXAucXVlcnlTZWxlY3RvckFsbCgnLnBvcHVwX19pbnB1dCcpO1xyXG4gICAgICAgIHRoaXMuX2J1dHRvbiA9IHBvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fc3VibWl0LWJ1dHRvbicpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICAgICAgdGhpcy5faW5wdXRWYWx1ZXMgPSB7fTtcclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5faW5wdXRWYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTsgXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lucHV0VmFsdWVzO1xyXG4gICAgfVxyXG5cclxuICAgIHNldElucHV0VmFsdWVzKGRhdGEpIHtcclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgICAgICAgaW5wdXQudmFsdWUgPSBkYXRhW2lucHV0Lm5hbWVdO1xyXG4gICAgICAgIH0pIFxyXG4gICAgfVxyXG5cclxuICAgIHNldEJ1dHRvblRleHQodGV4dCkge1xyXG4gICAgICAgIHRoaXMuX2J1dHRvbi50ZXh0Q29udGVudCA9IHRleHQ7XHJcbiAgICB9XHJcblxyXG4gICAgY2xvc2UoKSB7XHJcbiAgICAgICAgc3VwZXIuY2xvc2UoKTtcclxuICAgICAgICB0aGlzLl9wb3B1cEZvcm0ucmVzZXQoKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpOyAgIFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBQb3B1cCB9IGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXAuanMnO1xyXG5cclxuXHJcbmV4cG9ydCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cCkge1xyXG4gICAgICAgIHN1cGVyKHBvcHVwKTtcclxuICAgICAgICB0aGlzLl9saW5rID0gcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19wbGFjZS1pbWcnKTtcclxuICAgICAgICB0aGlzLl9uYW1lID0gcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX190aXRsZS1pbWcnKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgb3BlbihsaW5rLCBuYW1lKSB7IFxyXG4gICAgICAgIHRoaXMuX2xpbmsuc3JjID0gbGluaztcclxuICAgICAgICB0aGlzLl9saW5rLmFsdCA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5fbmFtZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICAgICAgc3VwZXIub3BlbigpO1xyXG4gICAgfVxyXG59XHJcblxyXG4iLCJpbXBvcnQgeyBQb3B1cCB9IGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUG9wdXBEZWxldGVGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IgKHBvcHVwLCBoYW5kbGVGb3JtRGVsZXRlU3VibWl0KSB7XHJcbiAgICAgICAgc3VwZXIocG9wdXApO1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZUZvcm1EZWxldGVTdWJtaXQgPSBoYW5kbGVGb3JtRGVsZXRlU3VibWl0LmJpbmQodGhpcyk7XHJcbiAgICAgICAgdGhpcy5fZm9ybSA9ICBwb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTtcclxuICAgICAgICB0aGlzLl9idXR0b24gPSBwb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3N1Ym1pdC1idXR0b24nKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRCdXR0b25UZXh0KHRleHQpIHtcclxuICAgICAgICB0aGlzLl9idXR0b24udGV4dENvbnRlbnQgPSB0ZXh0O1xyXG4gICAgfVxyXG5cclxuICAgIG9wZW4oY2FyZCwgY2FyZElEKSB7XHJcbiAgICAgICAgc3VwZXIub3BlbigpO1xyXG4gICAgICAgIHRoaXMuX2NhcmQgPSBjYXJkOyBcclxuICAgICAgICB0aGlzLl9jYXJkSUQgPSBjYXJkSUQ7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2dCkgPT4ge1xyXG4gICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICB0aGlzLl9oYW5kbGVGb3JtRGVsZXRlU3VibWl0KHRoaXMuX2NhcmQpOyAgIFxyXG4gICAgICAgICAgc3VwZXIuY2xvc2UoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHsgaW5pdGlhbENhcmRzLCB2YWxpZGF0aW9uQ29uZmlnLCBjYXJkc0NvbnRhaW5lciwgcG9wdXBPcGVuVXNlciwgcG9wdXBPcGVuUGxhY2UsIFxyXG4gICAgcG9wdXBVc2VyLCBwb3B1cFBsYWNlLCBwb3B1cEltYWdlLCBwb3B1cEZvcm1Vc2VyLCBuYW1lSW5wdXQsIGpvYklucHV0LCBuYW1lUHJvZmlsZSwgXHJcbiAgICBqb2JQcm9maWxlLCBwcm9maWxlQXZhdGFyLCBwb3B1cEZvcm1QbGFjZSwgcG9wdXBBdmF0YXIsIGF2YXRhcklucHV0LCBwb3B1cERlbGV0ZSwgcG9wdXBGb3JtQXZhdGFyLCAgcG9wdXBPcGVuQXZhdGFyLCBhcGlDb25maWcgfSBmcm9tICcuLi91dGlscy9jb25zdGFudHMuanMnO1xyXG5pbXBvcnQgeyBBcGkgfSBmcm9tICcuLi9jb21wb25lbnRzL0FwaS5qcyc7XHJcbmltcG9ydCB7IENhcmQgfSBmcm9tICcuLi9jb21wb25lbnRzL0NhcmQuanMnO1xyXG5pbXBvcnQgeyBGb3JtVmFsaWRhdG9yIH0gZnJvbSAnLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzJztcclxuaW1wb3J0IHsgU2VjdGlvbiB9IGZyb20gJy4uL2NvbXBvbmVudHMvU2VjdGlvbi5qcyc7XHJcbmltcG9ydCB7IFVzZXJJbmZvIH0gZnJvbSAnLi4vY29tcG9uZW50cy9Vc2VySW5mby5qcyc7XHJcbmltcG9ydCB7IFBvcHVwV2l0aEZvcm0gfSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMnO1xyXG5pbXBvcnQgeyBQb3B1cFdpdGhJbWFnZSB9IGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMnO1xyXG5pbXBvcnQgeyBQb3B1cERlbGV0ZUZvcm0gfSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwRGVsZXRlRm9ybS5qcyc7XHJcbmltcG9ydCAnLi9pbmRleC5jc3MnO1xyXG5cclxubGV0IHVzZXJJZDtcclxuXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtuYW1lOiBuYW1lUHJvZmlsZSwgYWJvdXQ6IGpvYlByb2ZpbGUsIGF2YXRhcjogcHJvZmlsZUF2YXRhcn0pO1xyXG5cclxuY29uc3QgY2FyZExpc3QgPSBuZXcgU2VjdGlvbih7XHJcbiAgY2FyZHM6IGluaXRpYWxDYXJkcyxcclxuICByZW5kZXJlcjogKGNhcmQpID0+IHtcclxuICAgIGNhcmRMaXN0LmFkZEl0ZW0oY3JlYXRlQ2FyZChjYXJkKSk7XHJcbiAgfVxyXG59LCBjYXJkc0NvbnRhaW5lcik7XHJcblxyXG5jb25zdCBwb3B1cFdpdGhJbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZShwb3B1cEltYWdlKTtcclxucG9wdXBXaXRoSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUNhcmRDbGljayhsaW5rLCBuYW1lKSB7XHJcbiAgICBwb3B1cFdpdGhJbWFnZS5vcGVuKGxpbmssIG5hbWUpO1xyXG59O1xyXG5cclxuZnVuY3Rpb24gY3JlYXRlQ2FyZCAoaXRlbSkge1xyXG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChpdGVtLCAnI2VsZW1lbnQtdGVtcGxhdGUnLCBoYW5kbGVDYXJkQ2xpY2ssIGhhbmRsZUNhcmREZWxldGUsIGhhbmRsZUNhcmRMaWtlLCB1c2VySWQpXHJcbiAgY29uc3QgbmV3Q2FyZCA9IGNhcmQuZ2VuZXJhdGVDYXJkKCk7XHJcbiAgcmV0dXJuIG5ld0NhcmQ7XHJcbn07XHJcblxyXG5jb25zdCBhcGkgPSBuZXcgQXBpKGFwaUNvbmZpZyk7XHJcblxyXG5Qcm9taXNlLmFsbChbYXBpLmdldFVzZXJJbmZvKCksIGFwaS5nZXRDYXJkTGlzdCgpXSlcclxuICAudGhlbihyZXNwb25zZXMgPT4ge1xyXG4gICAgY29uc3QgdXNlckRhdGEgPSByZXNwb25zZXNbMF07XHJcbiAgICBjb25zdCBjYXJkcyA9IHJlc3BvbnNlc1sxXTtcclxuXHJcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyh1c2VyRGF0YSk7XHJcbiAgICB1c2VySW5mby5zZXRVc2VyQXZhdGFyKHVzZXJEYXRhKTtcclxuICAgIHVzZXJJbmZvLmdldFVzZXJJZCh1c2VyRGF0YS5faWQpO1xyXG5cclxuICAgIHVzZXJJZCA9IHVzZXJEYXRhLl9pZDtcclxuICAgIGNhcmRMaXN0LnJlbmRlckl0ZW1zKGNhcmRzKTtcclxuICAgIH0pXHJcbiAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgIH0pO1xyXG5cclxuYXBpLmdldENhcmRMaXN0KClcclxuICAudGhlbigocmVzKSA9PiB7XHJcbiAgICBjYXJkTGlzdC5yZW5kZXJJdGVtcyhyZXMpO1xyXG59KVxyXG4gIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG59KTtcclxuXHJcbmFwaS5nZXRVc2VySW5mbygpXHJcbi50aGVuKChyZXMpID0+IHtcclxuICAgdXNlckluZm8uZ2V0VXNlckluZm8ocmVzKTtcclxuICAgbmFtZUlucHV0LnZhbHVlID0gcmVzLm5hbWU7XHJcbiAgIGpvYklucHV0LnZhbHVlID0gcmVzLmFib3V0OyAgXHJcblxyXG59KVxyXG4uY2F0Y2goKGVycikgPT4ge1xyXG4gICAgY29uc29sZS5sb2coZXJyKTtcclxufSk7XHJcblxyXG5jb25zdCBwb3B1cEFkZFBsYWNlQ2FyZCA9IG5ldyBQb3B1cFdpdGhGb3JtKHBvcHVwUGxhY2UsXHJcbiAgICB7IGhhbmRsZUZvcm1TdWJtaXQ6IChuYW1lLCBsaW5rKSA9PiB7XHJcbiAgICAgICAgICBwb3B1cEFkZFBsYWNlQ2FyZC5zZXRCdXR0b25UZXh0KCfQodC+0YXRgNCw0L3QtdC90LjQtS4uLicpO1xyXG4gICAgICAgICAgXHJcbiAgICAgICAgIGFwaS5jcmVhdGVJdGVtKG5hbWUsIGxpbmspXHJcbiAgICAgICAgIC50aGVuKHJlcyA9PiB7ICBcclxuICAgICAgICAgICAgIGNvbnN0IG5ld0ltYWdlID0gY3JlYXRlQ2FyZChyZXMpO1xyXG4gICAgICAgICAgICAgY2FyZExpc3QuYWRkSXRlbShuZXdJbWFnZSk7XHJcbiAgICAgICAgICAgICBwb3B1cEFkZFBsYWNlQ2FyZC5jbG9zZSgpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICAgICAgIHBvcHVwQWRkUGxhY2VDYXJkLnNldEJ1dHRvblRleHQoJ9Ch0L7Qt9C00LDRgtGMJylcclxuICAgICAgICB9KVxyXG4gICAgICB9XHJcbiAgICB9XHJcbik7XHJcbnBvcHVwQWRkUGxhY2VDYXJkLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCBwb3B1cERlbGV0ZVVzZXJDYXJkID0gbmV3IFBvcHVwRGVsZXRlRm9ybShwb3B1cERlbGV0ZSwgY2FyZCA9PiB7XHJcbiAgICBwb3B1cERlbGV0ZVVzZXJDYXJkLnNldEJ1dHRvblRleHQoJ9Cj0LTQsNC70LXQvdC40LUuLi4nKTtcclxuXHJcbiAgYXBpLmRlbGV0ZUl0ZW0oY2FyZC5fY2FyZElkKVxyXG4gIC50aGVuKCgpID0+IHtcclxuICAgICAgY2FyZC5kZWxldGVDYXJkKCk7XHJcbiAgICAgIHBvcHVwRGVsZXRlVXNlckNhcmQuY2xvc2UoKTtcclxuICB9KVxyXG4gIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgfSlcclxuICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIHBvcHVwRGVsZXRlVXNlckNhcmQuc2V0QnV0dG9uVGV4dCgn0JTQsCcpXHJcbiAgfSlcclxufSBcclxuKTtcclxucG9wdXBEZWxldGVVc2VyQ2FyZC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuZnVuY3Rpb24gaGFuZGxlQ2FyZERlbGV0ZShjYXJkLCBjYXJkSUQpIHtcclxuICBwb3B1cERlbGV0ZVVzZXJDYXJkLm9wZW4oY2FyZCwgY2FyZElEKTtcclxufTtcclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUNhcmRMaWtlKGNhcmQpIHtcclxuICBpZiAoY2FyZC5pc0xpa2UpIHtcclxuICAgICAgICBhcGkuZGVsZXRlTGlrZShjYXJkLl9jYXJkSWQpXHJcbiAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgICAgY2FyZC5nZXRMaWtlcyhyZXMubGlrZXMpO1xyXG4gICAgICAgICAgY2FyZC50b2dnbGVJc0xpa2UoKTtcclxuICAgICAgICAgIGNhcmQudG9nZ2xlTGlrZSgpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBhcGkucHV0TGlrZShjYXJkLl9jYXJkSWQpXHJcbiAgICAgICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgY2FyZC5nZXRMaWtlcyhyZXMubGlrZXMpO1xyXG4gICAgICAgICAgICAgIGNhcmQudG9nZ2xlSXNMaWtlKCk7XHJcbiAgICAgICAgICAgICAgY2FyZC50b2dnbGVMaWtlKCk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgIH1cclxufTtcclxuXHJcbmNvbnN0IHBvcHVwRWRpdFVzZXIgPSBuZXcgUG9wdXBXaXRoRm9ybShwb3B1cFVzZXIsXHJcbiAgeyBoYW5kbGVGb3JtU3VibWl0OiAoZGF0YSkgPT4ge1xyXG4gICAgICAgIHBvcHVwRWRpdFVzZXIuc2V0QnV0dG9uVGV4dCgn0KHQvtGF0YDQsNC90LXQvdC40LUuLi4nKTtcclxuXHJcbiAgICAgICAgYXBpLnNldFVzZXJJbmZvKGRhdGEpIFxyXG4gICAgICAgIC50aGVuKHJlcyA9PiB7XHJcbiAgICAgICAgdXNlckluZm8uc2V0VXNlckluZm8ocmVzLCB7bmFtZTogbmFtZUlucHV0LCBhYm91dDogam9iSW5wdXR9KTtcclxuICAgICAgICBwb3B1cEVkaXRVc2VyLmNsb3NlKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgIH0pXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIHBvcHVwRWRpdFVzZXIuc2V0QnV0dG9uVGV4dCgn0KHQvtGF0YDQsNC90LjRgtGMJylcclxuICAgIH0pXHJcbiAgfVxyXG59XHJcbik7XHJcbnBvcHVwRWRpdFVzZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IHBvcHVwRWRpdFVzZXJBdmF0YXIgPSBuZXcgUG9wdXBXaXRoRm9ybShwb3B1cEF2YXRhcixcclxuICB7IGhhbmRsZUZvcm1TdWJtaXQ6IChkYXRhKSA9PiB7XHJcbiAgICAgIHBvcHVwRWRpdFVzZXJBdmF0YXIuc2V0QnV0dG9uVGV4dCgn0KHQvtGF0YDQsNC90LXQvdC40LUuLi4nKTtcclxuXHJcbiAgICAgIGFwaS5zZXRVc2VyQXZhdGFyKGRhdGEpXHJcbiAgICAgIC50aGVuKHJlcyA9PiB7XHJcbiAgICAgICAgICB1c2VySW5mby5zZXRVc2VyQXZhdGFyKHJlcywge2F2YXRhcjogYXZhdGFySW5wdXR9KTsgXHJcbiAgICAgICAgICBwb3B1cEVkaXRVc2VyQXZhdGFyLmNsb3NlKCk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgICB9KVxyXG4gICAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgICAgICBwb3B1cEVkaXRVc2VyQXZhdGFyLnNldEJ1dHRvblRleHQoJ9Ch0L7RhdGA0LDQvdC40YLRjCcpXHJcbiAgICAgICAgfSlcclxuICAgICAgfVxyXG4gIH0pO1xyXG5wb3B1cEVkaXRVc2VyQXZhdGFyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5cclxuY29uc3QgdXNlckZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uQ29uZmlnLCBwb3B1cEZvcm1Vc2VyKTtcclxudXNlckZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuY29uc3QgcGxhY2VGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdGlvbkNvbmZpZywgcG9wdXBGb3JtUGxhY2UpO1xyXG5wbGFjZUZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuY29uc3QgYXZhdGFyRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25Db25maWcsIHBvcHVwRm9ybUF2YXRhcik7XHJcbmF2YXRhckZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuXHJcbnBvcHVwT3BlblVzZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgcG9wdXBFZGl0VXNlci5zZXRJbnB1dFZhbHVlcyh1c2VySW5mby5nZXRVc2VySW5mbygpKTtcclxuICBwb3B1cEVkaXRVc2VyLm9wZW4oKTtcclxufSk7XHJcblxyXG5wb3B1cE9wZW5QbGFjZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xyXG4gIHBvcHVwQWRkUGxhY2VDYXJkLm9wZW4oKTtcclxuICBwbGFjZUZvcm1WYWxpZGF0b3IucmVzZXRGb3JtKCk7XHJcbn0pO1xyXG5cclxucG9wdXBPcGVuQXZhdGFyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XHJcbiAgcG9wdXBFZGl0VXNlckF2YXRhci5vcGVuKCk7XHJcbiAgYXZhdGFyRm9ybVZhbGlkYXRvci5yZXNldEZvcm0oKTtcclxufSk7Il0sIm5hbWVzIjpbInZhbGlkYXRpb25Db25maWciLCJmb3JtU2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImNhcmRzQ29udGFpbmVyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicG9wdXBVc2VyIiwicG9wdXBQbGFjZSIsInBvcHVwSW1hZ2UiLCJwb3B1cEF2YXRhciIsInBvcHVwRGVsZXRlIiwicG9wdXBPcGVuVXNlciIsInBvcHVwT3BlblBsYWNlIiwicG9wdXBPcGVuQXZhdGFyIiwicHJvZmlsZUF2YXRhciIsInBvcHVwRm9ybVVzZXIiLCJuYW1lSW5wdXQiLCJqb2JJbnB1dCIsImF2YXRhcklucHV0IiwibmFtZVByb2ZpbGUiLCJqb2JQcm9maWxlIiwicG9wdXBGb3JtUGxhY2UiLCJwb3B1cEZvcm1BdmF0YXIiLCJBcGkiLCJjb25maWciLCJ0aGlzIiwiaGVhZGVycyIsImJhc2VVUkwiLCJpdGVtIiwiZmV0Y2giLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm5hbWUiLCJsaW5rIiwidGhlbiIsInJlcyIsIl9jaGVja1NlcnZlclJlc3BvbnNlIiwiaWQiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiZGF0YSIsImFib3V0IiwiYXZhdGFyIiwiQ2FyZCIsInRlbXBsYXRlU2VsZWN0b3IiLCJoYW5kbGVDYXJkQ2xpY2siLCJoYW5kbGVDYXJkRGVsZXRlIiwiaGFuZGxlQ2FyZExpa2UiLCJ1c2VySWQiLCJfbmFtZSIsIl9saW5rIiwiX3RlbXBsYXRlU2VsZWN0b3IiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2hhbmRsZUNhcmREZWxldGUiLCJfaGFuZGxlQ2FyZExpa2UiLCJfdXNlcklkIiwiX2NhcmRJZCIsIl9pZCIsIl9vd25lcklkIiwib3duZXIiLCJfaXNMaWtlIiwiX2xpa2VzIiwibGlrZXMiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX3RyYXNoQnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9saWtlQnV0dG9uIiwiX2NhcmRJbWFnZSIsImNsYXNzTGlzdCIsInRvZ2dsZSIsIl9saWtlc0JveCIsInRleHRDb250ZW50IiwibGVuZ3RoIiwiX2VsZW1lbnQiLCJyZW1vdmUiLCJfZ2V0VGVtcGxhdGUiLCJfY2FyZE5hbWUiLCJzcmMiLCJhbHQiLCJzb21lIiwiYWRkIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiRm9ybVZhbGlkYXRvciIsImZvcm1FbGVtZW50IiwiX2NvbmZpZyIsIl9mb3JtRWxlbWVudCIsIl9mb3JtU2VsZWN0b3IiLCJfaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfYnV0dG9uRWxlbWVudCIsImlucHV0RWxlbWVudCIsImVycm9yRWxlbWVudCIsInZhbGlkYXRpb25NZXNzYWdlIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsIl9oYXNJbnZhbGlkSW5wdXQiLCJkaXNhYmxlZCIsImZvckVhY2giLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiU2VjdGlvbiIsInNlbGVjdG9yIiwicmVuZGVyZXIiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiaXRlbXMiLCJyZXZlcnNlIiwiY2FyZCIsInByZXBlbmQiLCJVc2VySW5mbyIsIl91c2VyTmFtZSIsIl91c2VySm9iIiwiX2F2YXRhciIsIlBvcHVwIiwicG9wdXAiLCJldnQiLCJrZXkiLCJjbG9zZSIsIl9wb3B1cCIsIl9jbG9zZUJ1dHRvbiIsIl9oYW5kbGVFc2NDbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJ0YXJnZXQiLCJjb250YWlucyIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVGb3JtU3VibWl0IiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfcG9wdXBGb3JtIiwiX2J1dHRvbiIsIl9pbnB1dFZhbHVlcyIsImlucHV0IiwidmFsdWUiLCJ0ZXh0IiwicmVzZXQiLCJwcmV2ZW50RGVmYXVsdCIsIl9nZXRJbnB1dFZhbHVlcyIsIlBvcHVwV2l0aEltYWdlIiwiUG9wdXBEZWxldGVGb3JtIiwiaGFuZGxlRm9ybURlbGV0ZVN1Ym1pdCIsIl9oYW5kbGVGb3JtRGVsZXRlU3VibWl0IiwiYmluZCIsIl9mb3JtIiwiY2FyZElEIiwiX2NhcmQiLCJfY2FyZElEIiwidXNlckluZm8iLCJjYXJkTGlzdCIsImNhcmRzIiwiYWRkSXRlbSIsImNyZWF0ZUNhcmQiLCJwb3B1cFdpdGhJbWFnZSIsIm9wZW4iLCJnZW5lcmF0ZUNhcmQiLCJzZXRFdmVudExpc3RlbmVycyIsImFwaSIsImF1dGhvcml6YXRpb24iLCJhbGwiLCJnZXRVc2VySW5mbyIsImdldENhcmRMaXN0IiwicmVzcG9uc2VzIiwidXNlckRhdGEiLCJzZXRVc2VySW5mbyIsInNldFVzZXJBdmF0YXIiLCJnZXRVc2VySWQiLCJyZW5kZXJJdGVtcyIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsInBvcHVwQWRkUGxhY2VDYXJkIiwic2V0QnV0dG9uVGV4dCIsImNyZWF0ZUl0ZW0iLCJuZXdJbWFnZSIsImZpbmFsbHkiLCJwb3B1cERlbGV0ZVVzZXJDYXJkIiwiZGVsZXRlSXRlbSIsImRlbGV0ZUNhcmQiLCJpc0xpa2UiLCJkZWxldGVMaWtlIiwiZ2V0TGlrZXMiLCJ0b2dnbGVJc0xpa2UiLCJ0b2dnbGVMaWtlIiwicHV0TGlrZSIsInBvcHVwRWRpdFVzZXIiLCJwb3B1cEVkaXRVc2VyQXZhdGFyIiwiZW5hYmxlVmFsaWRhdGlvbiIsInBsYWNlRm9ybVZhbGlkYXRvciIsImF2YXRhckZvcm1WYWxpZGF0b3IiLCJzZXRJbnB1dFZhbHVlcyIsInJlc2V0Rm9ybSJdLCJzb3VyY2VSb290IjoiIn0=